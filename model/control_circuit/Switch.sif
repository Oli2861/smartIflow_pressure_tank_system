package control_circuit;
import definitions.*;

class Switch extends ElectricalComponent {
    Variables:
        // Whether the switch was pressed & is supposed to connect the wires.
        Boolean isActuated = False;
        Enum[Nominal, Defect] failureMode { type = failureMode } = Nominal;

    Events:
        PressButton { type = userAction };
        ReleaseButton { type = userAction};
        SwitchDefect { type = failure, p = 3e-5, detection = 5 };

    Behavior:
        if(isActuated == True) {
            connect{ r = 1 }(powerConnection1, powerConnection2);
        }

    Transitions:
        // Since the button is not continiously pressed,
        // it the switch disconnects the connection after 1 OM of time.
        when { delay = 2, name = reset } (isActuated == True) [failureMode == Nominal] {
            isActuated = False;
        }

    EventHandlers:
        // Manual connection of the switch. The user connects the switch in order to start the system.
        when (PressButton) [isActuated == False]{
            // Start system.
            isActuated = True;
        }

        when { stable=1 } (ReleaseButton) [isActuated == True] {
            isActuated = False;
        }

        when(SwitchDefect) {
            failureMode = Defect;
        }

}
