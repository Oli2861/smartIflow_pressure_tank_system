package control_circuit;

import definitions.*;

class Relay extends ForwardingElectricalComponent {
    Ports:
        // First Input controling the connection.
        Electrical clientPowerConnection1;
        // Second Input controling the connection.
        Electrical clientPowerConnection2;

    Variables:
        // The failure mode defect represents component failures in which the
        // relay does not open it's contacts even though it is supposed to do so.
        // Causes of such scenarios are jams or corroded contacts.
        Enum[Nominal, Defect] failureMode { type = failureMode } = Nominal;
        // Indicates whether the contacts of the relay are connected (power is forwarded).
        Boolean isConnected = False;

    Events:
        Defect { type = failure, p = 1e-6 };

    Behavior:
        // Connect client connection if the relay is powered.
        if(isConnected == True) {
            connect { r = 1 } (clientPowerConnection1, clientPowerConnection2);
        }

    Transitions:
        when(isPowered == True) {
            isConnected = True;
        }
        // The connection is only cut, if the relay does not longer receive power and
        // the failure mode is nominal i.e. contacts are not jammed.
        when(isPowered == False && failureMode == Nominal) {
            isConnected = False;
        }

    EventHandlers:
        when(Defect) {
            failureMode = Defect;
        }

}
