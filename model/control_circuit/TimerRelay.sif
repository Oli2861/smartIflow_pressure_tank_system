package control_circuit;

import definitions.*;

class TimerRelay extends ForwardingElectricalComponent {
    Ports:
        Electrical clientPowerConnection1;
        Electrical clientPowerConnection2;

    Variables:
        // If the timer relay is damaged, it does not time out.
        Enum[Nominal, Defect] failureMode = Nominal;
        // Client connections connected by default
        Boolean isConnected = True;

    Events:
        Defect { type = failure };

    Behavior:
        if(failureMode == Nominal && isConnected == True) {
            connect{ r = 1 }(clientPowerConnection1, clientPowerConnection2);
        }

    Transitions:
        // Disconnect client connections
        when { delay = 2 } (flow.om(powerConnection1, powerConnection2) != null)
            [failureMode == Nominal && isPowered == False] {
            isConnected = False;
        }

    EventHandlers:
        when(Defect){
            failureMode = Defect;
        }

}
