package valve_system;

import definitions.*;

class PressureTank {
    Ports:
        // Fluid received from pump.
        Fluid fluidInput;
        // Pressure output to the pressure switch.
        PressureInfo pressureInfo;


    Variables:
        Enum[Unpressured, Pressurized, Damaged] status = Unpressured;
        Boolean isReceivingPressure = False;

    Behavior:
        // Update pressure sensor information
        if(status == Pressurized || status == Damaged) {
            set(pressureInfo, { pressurized = True });
        }
        if(status == Pressurized) {
            set(pressureInfo, { pressurized = False });
        }

    Transitions:
        // Update whether the tank is currently filled by the pump
        when (fluidInput.exists(running = True)) {
            isReceivingPressure = True;
        }
        when (fluidInput.exists(running = False)) {
            isReceivingPressure = False;
        }

        // As water is pumped into the pressure tank, the tank becomes pressurized.
        when { delay = 1 } (fluidInput.exists(running = True)) [isReceivingPressure == True] {
            status = Pressurized;
        }
        // If pressured still after 2 time steps --> Damaged
        when { delay = 3 } (fluidInput.exists(running = True)) [isReceivingPressure == True] {
            status = Damaged;
        }

}
